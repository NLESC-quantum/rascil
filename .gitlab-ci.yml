image: python:3.7

variables:
  MPLBACKEND: "agg"

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH

stages:
  - test
  - build
  - publish

linting:
  stage: test
  script:
    - pip install -r requirements-test.txt
    - make lint
  when: always
  artifacts:
    paths:
      - ./build

# Always run the unittests
test:
  stage: test
  before_script:
    - apt-get update
    - apt-get -y install rsync ca-certificates pybind11-dev
    - pip3 install -r requirements.txt
    - mkdir -p /usr/share/casacore/data/
    - rsync -avz4 rsync://casa-rsync.nrao.edu/casa-data/geodetic /usr/share/casacore/data/
    - git clone https://gitlab.mpcdf.mpg.de/ift/nifty_gridder.git
    - cd nifty_gridder
    - pip3 install .
    - cd ..
    - mkdir -p test_results
  script:
    - PYTHONPATH=`pwd` HOME=`pwd` make test
  artifacts:
    paths:
    - ./build
    - htmlcov
    - xmlcov

# Always try to build the docs since this catches errors via the notebook
docs:
  stage: test
  before_script:
    - apt-get update
    - apt-get -y install pandoc rsync
    - pip install -r requirements.txt -r requirements-docs.txt
    - mkdir -p docs/build/html
    - mkdir -p test_results
    - mkdir -p /usr/share/casacore/data/
    - rsync -avz4 rsync://casa-rsync.nrao.edu/casa-data/geodetic /usr/share/casacore/data/
  script:
    - PYTHONPATH=`pwd` HOME=`pwd` make -k -C docs/src html
  after_script:
    - mv docs/build/html html
  artifacts:
    paths:
      - html/
    expire_in: 1 week


# Build the data file only if on the master
data:
  stage: build
  script:
    - tar -zcf rascil_data.tgz data
  artifacts:
    paths:
      - rascil_data.tgz
    expire_in: 6 months
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

# Publish pip file to nexus only if this is a tagged build of the master
publish_to_nexus:
  stage: publish
  tags:
    - docker-executor
  variables:
    TWINE_USERNAME: $TWINE_USERNAME
    TWINE_PASSWORD: $TWINE_PASSWORD
  script:
    - echo "Commit tag is ${CI_COMMIT_TAG}"
    - echo "Commit message is ${CI_COMMIT_MESSAGE}"
    - pip3 install setuptools
    - python3 setup.py egg_info sdist bdist_wheel # --universal option to used for pure
    - pip3 install twine
    - twine upload --repository-url $PYPI_REPOSITORY_URL dist/*
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_BRANCH == "master"'

# Trigger downstream docker build to nexus only if this is a tagged build of the master
staging: # Start the construction of dockers files in rascil-docker
  stage: publish
  trigger: ska-telescope/rascil-docker
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_BRANCH == "master"'

# Publish the docs, data, and coverage if this is a build of the master
pages:
  stage: publish
  dependencies:
    - docs
    - test
    - data
  script:
    - ls -la
    - mkdir .public
    - cp -r htmlcov/* .public
    - cp rascil_data.tgz .public
    - cp -r html .public
    - cp -r xml .public
    - rm -rf xmlcov htmlcov rascil_data.tgz html
    - mv .public public
  artifacts:
    paths:
      - public
    expire_in: 30 days
  rules:
    - if: '$CI_COMMIT_BRANCH == "SIM-486"'

create ci metrics:
  stage: .post
  when: always
  script:
    # Gitlab CI badges creation: START
    - apt-get -y update
    - apt-get install -y curl --no-install-recommends
    - curl -s https://gitlab.com/ska-telescope/ci-metrics-utilities/raw/master/scripts/ci-badges-func.sh | sh
    # Gitlab CI badges creation: END
  artifacts:
    paths:
      - ./build
